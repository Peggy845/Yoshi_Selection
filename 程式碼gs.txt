//const SPREADSHEET_ID = '1KXmggPfKqpg5gZCsUujlpdTcKSFdGJHv4bOux3nc2xo';
function doGet(e) {
  const action = e.parameter.action;
  if (action === 'getCategories') {
    return ContentService.createTextOutput(JSON.stringify(getCategories()))
      .setMimeType(ContentService.MimeType.JSON);
  }
  if (action === 'getProducts') {
    const mainCat = e.parameter.main || '';
    const subCat = e.parameter.sub || '';
    return ContentService.createTextOutput(JSON.stringify(getProducts(mainCat, subCat)))
      .setMimeType(ContentService.MimeType.JSON);
  }
  return ContentService.createTextOutput(JSON.stringify({error: 'Invalid action'}))
    .setMimeType(ContentService.MimeType.JSON);
}

function getCategories() {
  const ss = SpreadsheetApp.openById('1KXmggPfKqpg5gZCsUujlpdTcKSFdGJHv4bOux3nc2xo');
  const sheet = ss.getSheetByName('分類圖片');
  const data = sheet.getDataRange().getValues();
  const result = [];
  const header = data.shift();

  data.forEach(row => {
    let mainCat = row[0];
    let mainImg = row[1];
    let subCat = row[2];
    let subImg = row[3];

    let existing = result.find(r => r.mainCat === mainCat);
    if (!existing) {
      existing = { mainCat, mainImg, subCategories: [] };
      result.push(existing);
    }
    existing.subCategories.push(subCat);
  });

  return result;
}

function getProducts(mainCat, subCat) {
  const ss = SpreadsheetApp.openById('1KXmggPfKqpg5gZCsUujlpdTcKSFdGJHv4bOux3nc2xo');
  const sheet = ss.getSheetByName(mainCat);
  const data = sheet.getDataRange().getValues();
  const header = data.shift();

  let products = data.map(row => {
    return {
      series: row[0],
      name: row[1],
      price: row[2],
      stock: row[3],
      type: row[4],
      option: row[5],
      detail: row[6],
      status: row[7],
      eta: row[8],
      img: row[9],
      extraImgs: row[10]
    };
  });

  if (subCat && subCat !== '全部') {
    products = products.filter(p => p.series === subCat);
  }

  return products;
}
