function doGet(e) {
  const ss = SpreadsheetApp.openById('1KXmggPfKqpg5gZCsUujlpdTcKSFdGJHv4bOux3nc2xo');
  const action = e.parameter.action || '';
  const type = e.parameter.type || 'category';
  const sheetName = e.parameter.sheet || '';
  const subCategory = e.parameter.subCategory || '';

  // --- 取得分頁名稱與分類圖片 ---
  if (action === 'getSheetNames') {
    const sheets = ss.getSheets();
    const sheetNames = sheets.map(s => s.getName()).filter(name => name !== '分類圖片');

    const catSheet = ss.getSheetByName('分類圖片');
    const catData = catSheet ? catSheet.getDataRange().getValues() : [];
    const headers = catData[0] || [];
    const categoryImages = [];

    for (let i = 1; i < catData.length; i++) {
      const rowObj = {};
      for (let j = 0; j < headers.length; j++) {
        rowObj[headers[j]] = catData[i][j];
      }
      categoryImages.push({
        mainCat: rowObj['頂層分類'] || '',
        mainImg: rowObj['頂層分類圖片檔名'] || '',
        subCat: rowObj['第二層分類'] || '',
        subImg: rowObj['第二層分類圖片檔名'] || ''
      });
    }

    return ContentService
      .createTextOutput(JSON.stringify({ sheetNames, categoryImages }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  // --- 取得商品資料 ---
  if (type === 'product') {
    if (!sheetName) {
      return ContentService
        .createTextOutput(JSON.stringify({ error: '缺少 sheet 參數' }))
        .setMimeType(ContentService.MimeType.JSON);
    }

    const sheet = ss.getSheetByName(sheetName);
    if (!sheet) {
      return ContentService
        .createTextOutput(JSON.stringify({ error: '找不到分頁: ' + sheetName }))
        .setMimeType(ContentService.MimeType.JSON);
    }

    const data = sheet.getDataRange().getValues();
    if (data.length < 2) {
      return ContentService
        .createTextOutput(JSON.stringify({ products: [] }))
        .setMimeType(ContentService.MimeType.JSON);
    }

    const headers = data[0];
    const products = [];

    for (let i = 1; i < data.length; i++) {
      const product = {};
      for (let j = 0; j < headers.length; j++) {
        product[headers[j]] = data[i][j] || ""; // 處理空值
      }

      // 精確或包含比對 subCategory
      if (!subCategory || (product['商品系列'] && String(product['商品系列']).includes(subCategory))) {
        products.push(product);
      }
    }

    return ContentService
      .createTextOutput(JSON.stringify({ products }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  // --- 無效請求 ---
  return ContentService
    .createTextOutput(JSON.stringify({ error: '無效的 action 或 type 參數' }))
    .setMimeType(ContentService.MimeType.JSON);
}
